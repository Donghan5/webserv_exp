# Global configuration
user www-data;  # User and group to run the worker processes
worker_processes auto;  # Automatically set based on available CPU cores

events {
    worker_connections 1024;  # Maximum number of connections per worker
    use epoll;  # Use epoll (Linux) for event notification
}

http {
    # Default error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    # Set default client body size
    client_max_body_size 10M;

    # Server Block for Default Server (Port 80)
    server {
        listen 80 default_server;  # Listen on port 80 as the default server
        server_name _;  # Wildcard to match any server name

        root /var/www/html;  # Root directory for serving files
        index index.html index.htm;  # Default index files

        # Default route handling
        location / {
			alias /somewhere/path/to/it
            try_files $uri $uri/ =404;  # Serve files or return 404 error
        }

        # Restrict HTTP methods for API endpoint
        location /api {
            limit_except GET POST DELETE {
                deny all;  # Only allow GET, POST, and DELETE methods
            }
        }

        # HTTP Redirect Example
        location /old-path {
            return 301 /new-path;  # Redirect to new path
        }

        # Serve files from a specific directory with directory listing
        location /files {
            root /var/www/html/files;  # Root directory for static files
            autoindex on;  # Enable directory listing
            index index.html;  # Default index file
        }

        # Execute CGI scripts (e.g., PHP)
        location ~ \.php$ {
            include snippets/fastcgi-php.conf;  # Include FastCGI configuration
            fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;  # Pass PHP requests to FastCGI socket
            include fastcgi_params;  # Include FastCGI parameters
        }

        # Handle file uploads
        location /upload {
            client_max_body_size 20M;  # Allow larger uploads for this route
            proxy_pass http://backend/upload;  # Pass uploads to backend service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Server Block for Specific Host on Port 80
    server {
        listen 80;  # Listen on port 80
        server_name example.com;  # Server name to match requests to example.com

        root /var/www/example.com/html;  # Root directory for example.com
        index index.html index.htm;  # Default index files

        # Default route handling
        location / {
            try_files $uri $uri/ =404;  # Serve files or return 404 error
        }

        # Restrict HTTP methods for API endpoint
        location /api {
            limit_except GET POST DELETE {
                deny all;  # Only allow GET, POST, and DELETE methods
            }
        }

        # Serve static files
        location /static {
            root /var/www/example.com/static;  # Root directory for static files
            autoindex off;  # Disable directory listing
            index index.html;  # Default index file
        }

        # Execute CGI scripts
        location ~ \.php$ {
            include snippets/fastcgi-php.conf;  # Include FastCGI configuration
            fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;  # Pass PHP requests to FastCGI socket
            include fastcgi_params;  # Include FastCGI parameters
        }
    }

    # Server Block for Specific Host on Port 8080
    server {
        listen 8080;  # Listen on port 8080
        server_name another.example.com;  # Server name to match requests to another.example.com

        root /var/www/another.example.com/html;  # Root directory for another.example.com
        index index.html index.htm;  # Default index files

        # Handle uploads on a different port
        location /upload {
            client_max_body_size 30M;  # Allow larger uploads for this route
            proxy_pass http://backend:8080/upload;  # Pass uploads to backend service on port 8080
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Global settings for all server blocks
    # (If needed, add additional global settings here)
}
